generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auditorium {
  auditorium          String          @id @db.Char(10)
  auditorium_name     String?         @db.VarChar(200)
  auditorium_capacity Int?
  auditorium_type     String          @db.Char(10)
  Auditorium_type     auditorium_type @relation("auditorium_auditorium_typeToauditorium_type", fields: [auditorium_type], references: [auditorium_type], onDelete: NoAction, onUpdate: NoAction)
}

model auditorium_type {
  auditorium_type     String       @id(map: "auditorium_type_pk") @db.Char(10)
  auditorium_typename String       @db.VarChar(30)
  Auditorium          auditorium[] @relation("auditorium_auditorium_typeToauditorium_type")
}

model faculty {
  faculty      String   @id(map: "pk_faculty") @db.Char(10)
  faculty_name String?  @db.VarChar(50)
  Pulpit       pulpit[] @relation("pulpit_facultyTofaculty")
}

model pulpit {
  pulpit      String    @id(map: "pk_pulpit") @db.Char(10)
  pulpit_name String?   @db.VarChar(100)
  faculty     String    @db.Char(10)
  Faculty     faculty   @relation("pulpit_facultyTofaculty", fields: [faculty], references: [faculty], onDelete: NoAction, onUpdate: NoAction, map: "fk_pulpit_faculty")
  Subject     subject[] @relation("subject_pulpitTopulpit")
  Teacher     teacher[] @relation("teacher_pulpitTopulpit")
}

model subject {
  subject      String @id(map: "pk_subject") @db.Char(10)
  subject_name String @db.VarChar(50)
  pulpit       String @db.Char(10)
  Pulpit       pulpit @relation("subject_pulpitTopulpit", fields: [pulpit], references: [pulpit], onDelete: NoAction, onUpdate: NoAction, map: "fk_subject_pulpit")
}

model teacher {
  teacher      String  @id(map: "pk_teacher") @db.Char(10)
  teacher_name String? @db.VarChar(50)
  pulpit       String  @db.Char(10)
  Pulpit       pulpit  @relation("teacher_pulpitTopulpit", fields: [pulpit], references: [pulpit], onDelete: NoAction, onUpdate: NoAction, map: "fk_teacher_pulpit")
}
